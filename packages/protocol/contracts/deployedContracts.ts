/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  1: {
    Pair: {
      address: "0x94badc0fb03f7c65d4b8b58e72eae96f89931b2b",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_token0",
              type: "address",
              internalType: "address",
            },
            {
              name: "_token1",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "addLiquidity",
          inputs: [
            {
              name: "amount0",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amount1",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "allowance",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "approve",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "decimals",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint8",
              internalType: "uint8",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getAmountOut",
          inputs: [
            {
              name: "fromToken",
              type: "address",
              internalType: "address",
            },
            {
              name: "targetToken",
              type: "address",
              internalType: "address",
            },
            {
              name: "amountIn",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "amountOut",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getLiquidityToMint",
          inputs: [
            {
              name: "amount0",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amount1",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "liquidity",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getReserves",
          inputs: [],
          outputs: [
            {
              name: "_reserve0",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_reserve1",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "name",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "removeLiquidity",
          inputs: [
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "swap",
          inputs: [
            {
              name: "fromToken",
              type: "address",
              internalType: "address",
            },
            {
              name: "targetToken",
              type: "address",
              internalType: "address",
            },
            {
              name: "amountIn",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "symbol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "token0",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "token1",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalSupply",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transfer",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "Approval",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "spender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Pair_Burn",
          inputs: [
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount0",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "amount1",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "burntLiquidity",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Pair_Mint",
          inputs: [
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount0",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "amount1",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "mintedLiquidity",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Pair_Swap",
          inputs: [
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenIn",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "tokenOut",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "amountIn",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "amountOut",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Transfer",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ERC20InsufficientAllowance",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
            {
              name: "allowance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needed",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InsufficientBalance",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "balance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needed",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidApprover",
          inputs: [
            {
              name: "approver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidReceiver",
          inputs: [
            {
              name: "receiver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidSender",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidSpender",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "Pair_ExceededMaxLiquidityRemoval",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_IdenticalAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_InsufficientBalance",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_InsufficientInitialLiquidity",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_InsufficientInput",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_InsufficientLiquidity",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_InsufficientLiquidityBurnt",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_InsufficientLiquidityMinted",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_InsufficientOutput",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_InvalidPairRatio",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_Locked",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_SwapNotSupported",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_TransferFailed",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_ZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "SafeERC20FailedOperation",
          inputs: [
            {
              name: "token",
              type: "address",
              internalType: "address",
            },
          ],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1739366767.json",
      deploymentScript: "Deploy.s.sol",
    },
    Factory: {
      address: "0x683979e390ae456f2c2956503946ad9b0331706b",
      abi: [
        {
          type: "function",
          name: "allPairs",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "createPair",
          inputs: [
            {
              name: "token0",
              type: "address",
              internalType: "address",
            },
            {
              name: "token1",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getPair",
          inputs: [
            {
              name: "token0",
              type: "address",
              internalType: "address",
            },
            {
              name: "token1",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "pairAddress",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getPairCount",
          inputs: [],
          outputs: [
            {
              name: "poolCount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "PairCreated",
          inputs: [
            {
              name: "token0",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "token1",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "pair",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "Factory_IdenticalAddresses",
          inputs: [],
        },
        {
          type: "error",
          name: "Factory_PoolExists",
          inputs: [],
        },
        {
          type: "error",
          name: "Factory_ZeroAddress",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1739366767.json",
      deploymentScript: "Deploy.s.sol",
    },
  },
  17357: {
    Factory: {
      address: "0x683979e390ae456f2c2956503946ad9b0331706b",
      abi: [
        {
          type: "function",
          name: "allPairs",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "createPair",
          inputs: [
            {
              name: "token0",
              type: "address",
              internalType: "address",
            },
            {
              name: "token1",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getPair",
          inputs: [
            {
              name: "token0",
              type: "address",
              internalType: "address",
            },
            {
              name: "token1",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "pairAddress",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getPairCount",
          inputs: [],
          outputs: [
            {
              name: "poolCount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "PairCreated",
          inputs: [
            {
              name: "token0",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "token1",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "pair",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "Factory_IdenticalAddresses",
          inputs: [],
        },
        {
          type: "error",
          name: "Factory_PoolExists",
          inputs: [],
        },
        {
          type: "error",
          name: "Factory_ZeroAddress",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1739277792.json",
      deploymentScript: "Deploy.s.sol",
    },
    Pair: {
      address: "0x94badc0fb03f7c65d4b8b58e72eae96f89931b2b",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_token0",
              type: "address",
              internalType: "address",
            },
            {
              name: "_token1",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "addLiquidity",
          inputs: [
            {
              name: "amount0",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amount1",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "allowance",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "approve",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "decimals",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint8",
              internalType: "uint8",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getAmountOut",
          inputs: [
            {
              name: "fromToken",
              type: "address",
              internalType: "address",
            },
            {
              name: "targetToken",
              type: "address",
              internalType: "address",
            },
            {
              name: "amountIn",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "amountOut",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getLiquidityToMint",
          inputs: [
            {
              name: "amount0",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amount1",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "liquidity",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getReserves",
          inputs: [],
          outputs: [
            {
              name: "_reserve0",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_reserve1",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "name",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "removeLiquidity",
          inputs: [
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "swap",
          inputs: [
            {
              name: "fromToken",
              type: "address",
              internalType: "address",
            },
            {
              name: "targetToken",
              type: "address",
              internalType: "address",
            },
            {
              name: "amountIn",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "symbol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "token0",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "token1",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalSupply",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transfer",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "Approval",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "spender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Pair_Burn",
          inputs: [
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount0",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "amount1",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "burntLiquidity",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Pair_Mint",
          inputs: [
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount0",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "amount1",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "mintedLiquidity",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Pair_Swap",
          inputs: [
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenIn",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "tokenOut",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "amountIn",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "amountOut",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Transfer",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ERC20InsufficientAllowance",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
            {
              name: "allowance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needed",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InsufficientBalance",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "balance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needed",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidApprover",
          inputs: [
            {
              name: "approver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidReceiver",
          inputs: [
            {
              name: "receiver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidSender",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidSpender",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "Pair_ExceededMaxLiquidityRemoval",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_IdenticalAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_InsufficientBalance",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_InsufficientInitialLiquidity",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_InsufficientInput",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_InsufficientLiquidity",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_InsufficientLiquidityBurnt",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_InsufficientLiquidityMinted",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_InsufficientOutput",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_InvalidPairRatio",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_Locked",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_SwapNotSupported",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_TransferFailed",
          inputs: [],
        },
        {
          type: "error",
          name: "Pair_ZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "SafeERC20FailedOperation",
          inputs: [
            {
              name: "token",
              type: "address",
              internalType: "address",
            },
          ],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1739277792.json",
      deploymentScript: "Deploy.s.sol",
    },
  },
  31337: {
    Factory: {
      address: "0xd8a79bf2c4f0e47f299123d68f201291b7774056",
      abi: [
        {
          type: "function",
          name: "allPairs",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "createPair",
          inputs: [
            {
              name: "token0",
              type: "address",
              internalType: "address",
            },
            {
              name: "token1",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getPair",
          inputs: [
            {
              name: "token0",
              type: "address",
              internalType: "address",
            },
            {
              name: "token1",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "pairAddress",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getPairCount",
          inputs: [],
          outputs: [
            {
              name: "poolCount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "PairCreated",
          inputs: [
            {
              name: "token0",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "token1",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "pair",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "Factory_IdenticalAddresses",
          inputs: [],
        },
        {
          type: "error",
          name: "Factory_PoolExists",
          inputs: [],
        },
        {
          type: "error",
          name: "Factory_ZeroAddress",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1742382358.json",
      deploymentScript: "DeployFactory.s.sol",
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
